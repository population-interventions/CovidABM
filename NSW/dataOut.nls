
to setup_DataOut
  set cohortLengthListOfZeros n-values length popDivisionTable_keys [0]
  set infectNoVacArray array:from-list cohortLengthListOfZeros
  set infectVacArray array:from-list cohortLengthListOfZeros
  set dieArray array:from-list cohortLengthListOfZeros
  
  set age_listOut []
  set atsi_listOut []
  set morbid_listOut []
  
  let index 0
  repeat length popDivisionTable_keys [
    let cohortData table:get popDivisionTable index
    
    set age_listOut lput (item 1 cohortData) age_listOut
    set atsi_listOut lput (item 2 cohortData) atsi_listOut
    set morbid_listOut lput (item 3 cohortData) morbid_listOut
    
    set index index + 1 
  ]
  
  if trace_calibration > 0 or success_28day_cases > 0 [
    set first_trace_day -1
    set first_trace_infections 0
    set finished_infections 0
    set finished_tracked 0
    set first_trace_occurred -1
  ]
end

to calculateDataOut
  set infectNoVacArray_listOut lput array:to-list infectNoVacArray infectNoVacArray_listOut
  set infectVacArray_listOut lput array:to-list infectVacArray infectVacArray_listOut
  set dieArray_listOut lput array:to-list dieArray dieArray_listOut
  set case_listOut lput casesReportedToday case_listOut
  set case7_listOut lput casesinperiod7 case7_listOut
  set case14_listOut lput casesinperiod14 case14_listOut
  set case28_listOut lput casesinperiod28 case28_listOut
  set stage_listOut lput stage stage_listOut
  
  set infectNoVacArray array:from-list cohortLengthListOfZeros
  set infectVacArray array:from-list cohortLengthListOfZeros
  set dieArray array:from-list cohortLengthListOfZeros
  
  if stage = 0 [
    set stage1time stage1time + 1
  ]
  if stage = 1 [
    set stage1btime stage1btime + 1
  ]
  if stage = 2 [
    set stage2time stage2time + 1
  ]
  if stage = 3 [
    set stage3time stage3time + 1
  ]
  if stage = 4 [
    set stage4time stage4time + 1
  ]
  
  if ticks < param_stage1_time [
    set casesinperiod7_switchTime casesinperiod7
    set cumulativeInfected_switchTime cumulativeInfected
  ]
end

to checkCalibrationStop
  if trace_calibration > 0 [
    if first_trace_day = -1 and casesinperiod7 > 0 [
      set first_trace_day ticks
      set first_trace_infections currentInfections
    ]
    
    if currentInfections = 0 or trace_calibration < cumulativeInfected [
      set pre_stop_day ticks
      set tracked_simuls (count simuls with [color = red and tracked = 1] * extraScaleFactor * scale_factor ^ scalePhase)
      ;print (list "End_Day" End_Day)
      ;print (list "first_trace_day" first_trace_day)
      ;print (list "first_trace_infections" first_trace_infections)
      ;print (list "currentInfections" currentInfections)
      ;print (list "cumulativeInfected" cumulativeInfected)
      ;print (list "tracked_simuls" tracked_simuls)
      ;print (list "finished_infections" finished_infections)
      ;print (list "finished_tracked" finished_tracked)
      ;print (list "cali_timenow" cali_timenow)
      ;print (list "cali_asymptomaticFlag" cali_asymptomaticFlag)
      ;print (list "cali_symtomatic_present_day" cali_symtomatic_present_day)
      set stop_simulation true
    ]
  ]
  
  if success_28day_cases > -1 [
    if casesinperiod28 / 28 < success_28day_cases [
      set pre_stop_day ticks
      set tracked_simuls (count simuls with [color = red and tracked = 1] * extraScaleFactor * scale_factor ^ scalePhase)
      set stop_simulation true
    ]
  ]
end
