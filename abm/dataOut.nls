
to setup_DataOut [maxHospTime maxIcuTime maxDeathTime]
  set cohortLengthListOfZeros n-values length table:keys popDivisionTable [0]
  
  set infectNoVacArray array:from-list cohortLengthListOfZeros
  set infectVacArray array:from-list cohortLengthListOfZeros
  set symptArray array:from-list cohortLengthListOfZeros
  
  set hospArray []
  repeat maxHospTime + 1 [
    set hospArray lput array:from-list cohortLengthListOfZeros hospArray
  ]
  
  set hospTimeArray []
  repeat maxHospTime + 1 [
    set hospTimeArray lput array:from-list cohortLengthListOfZeros hospTimeArray
  ]
  
  set icuArray []
  repeat maxIcuTime + 1 [
    set icuArray lput array:from-list cohortLengthListOfZeros icuArray
  ]
  
  set dieArray []
  repeat maxDeathTime + 1 [
    set dieArray lput array:from-list cohortLengthListOfZeros dieArray
  ]
  
  set age_listOut []
  
  let index 0
  repeat length table:keys popDivisionTable [
    let cohortData table:get popDivisionTable index
    set age_listOut lput (table:get cohortData "age") age_listOut
    set index index + 1 
  ]
  
  if trace_calibration > 0 or success_14day_cases > 0 [
    set first_trace_day -1
    set first_trace_infections 0
    set finished_infections 0
    set finished_tracked 0
    set first_trace_occurred -1
  ]
end

to calculateDataOut
  if _init_metric_threshold < 0[
    ;print "doDataOut"
    set infectNoVacArray_listOut lput array:to-list infectNoVacArray infectNoVacArray_listOut
    set infectVacArray_listOut lput array:to-list infectVacArray infectVacArray_listOut
    
    set dieArray_listOut      lput (array:to-list item 0 dieArray) dieArray_listOut
    set icuArray_listOut      lput (array:to-list item 0 icuArray) icuArray_listOut
    set hospTimeArray_listOut lput (array:to-list item 0 hospTimeArray) hospTimeArray_listOut
    set hospArray_listOut     lput (array:to-list item 0 hospArray) hospArray_listOut
    set symptArray_listOut    lput array:to-list symptArray symptArray_listOut
    
    set case_listOut   lput casesReportedToday case_listOut
    set case7_listOut  lput casesinperiod7 case7_listOut
    set case14_listOut lput casesinperiod14 case14_listOut
    set case28_listOut lput casesinperiod28 case28_listOut
    set stage_listOut  lput stage stage_listOut
    
    if stage = 1 [
      set stage1time stage1time + 1
    ]
    if stage = 2 [
      set stage2time stage2time + 1
    ]
    if stage = 3 [
      set stage3time stage3time + 1
    ]
    if stage = 4 [
      set stage4time stage4time + 1
    ]
    if stage = 5 [
      set stage5time stage5time + 1
    ]
    
    if _init_metric_threshold < 0 and ticks < param_stage1_time [
      set casesinperiod7_switchTime casesinperiod7
      set cumulativeInfected_switchTime cumulativeInfected
    ]
    
    if days = mid_report_day - 1 [
      set midReport_cumulativeInfected_minusInit cumulativeInfected_minusInit
      set midReport_totalCasesReported           totalCasesReported
      set midReport_slopeAverage                 slopeAverage
      set midReport_casesinperiod7_max           casesinperiod7_max
    ]
  ]
  
  set infectNoVacArray array:from-list cohortLengthListOfZeros
  set infectVacArray array:from-list cohortLengthListOfZeros
  set symptArray array:from-list cohortLengthListOfZeros
  
  set hospArray     lput array:from-list cohortLengthListOfZeros (but-first hospArray)
  set hospTimeArray lput array:from-list cohortLengthListOfZeros (but-first hospTimeArray)
  set icuArray      lput array:from-list cohortLengthListOfZeros (but-first icuArray)
  set dieArray      lput array:from-list cohortLengthListOfZeros (but-first dieArray)
  
  ;let i 0
  ;foreach hospArray [ x ->
  ;  print (sum array:to-list x) - item i hospTodayPipe
  ;  set i i + 1
  ;]
end

to checkCalibrationStop
  if trace_calibration > 0 [
    if first_trace_day = -1 and casesinperiod7 > 0 [
      set first_trace_day ticks
      set first_trace_infections currentInfections
    ]
    
    if currentInfections = 0 or trace_calibration < cumulativeInfected [
      set pre_stop_day ticks
      set tracked_simuls (count simuls with [color = red and tracked = 1] * extraScaleFactor * scale_factor ^ scalePhase)
      ;print (list "End_Day" End_Day)
      ;print (list "first_trace_day" first_trace_day)
      ;print (list "first_trace_infections" first_trace_infections)
      ;print (list "currentInfections" currentInfections)
      ;print (list "cumulativeInfected" cumulativeInfected)
      ;print (list "tracked_simuls" tracked_simuls)
      ;print (list "finished_infections" finished_infections)
      ;print (list "finished_tracked" finished_tracked)
      ;print (list "cali_timenow" cali_timenow)
      ;print (list "cali_asymptomaticFlag" cali_asymptomaticFlag)
      ;print (list "cali_symtomatic_present_day" cali_symtomatic_present_day)
      set stop_simulation true
    ]
  ]
  
  if success_14day_cases > -1 [
    if casesinperiod14 / 14 < success_14day_cases [
      set pre_stop_day ticks
      set tracked_simuls (count simuls with [color = red and tracked = 1] * extraScaleFactor * scale_factor ^ scalePhase)
      set stop_simulation true
    ]
  ]
end
