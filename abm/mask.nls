
to setup_mask
  let fileData remove-item 0 csv:from-file input_maskFile
  
  foreach fileData [ x -> 
    let name item 0 x
    (ifelse name = "standard"
      [
        set draw_maskWearEfficacy rngs:rnd-beta defaultStream (item 1 x) (item 2 x)
      ]
      name = "upgraded"
      [
        set draw_maskWearEfficacy_upgraded rngs:rnd-beta defaultStream (item 1 x) (item 2 x)
      ]
    )
  ]
  ;print draw_maskWearEfficacy
  ;print draw_maskWearEfficacy_upgraded
  
  set draw_maskUpgradeProp mask_upgradeProp
  set draw_maskUpgradeStage mask_upgradeStage
end

to-report simul_getMaskEfficacy
  if stage < draw_maskUpgradeStage or rngs:rnd-beta defaultStream 1 1 < draw_maskUpgradeProp [
    report draw_maskWearEfficacy * Mask_Efficacy_Mult
  ]
  report draw_maskWearEfficacy_upgraded * Mask_Efficacy_Mult
end