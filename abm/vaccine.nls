
to-report LnOddsToPr [lnOdd]
  let odds exp lnOdd
  report odds / (1 + odds)
end

to-report PrToLnOdds [pr]
  report ln (pr / (1 - pr))
end

to-report AddLogOdds [prob toAdd]
  let odds exp ((ln (prob / ( 1 - prob))) + toAdd)
  report odds / (odds + 1)
end

to-report vaccine_binomCheck [draw succeptibility repeats]
  report 1 - (1 - succeptibility) ^ repeats > draw
end

to setup_vaccineData
  set vacineEff_nameOut []
  set vacineEff_transOut []
  set vacineEff_areaOut []
  
  set vaccineParamsTable table:make
  foreach variantNames [ variant ->
    let vaccineParamsFileData remove-item 0 csv:from-file (word input_vac_params "_" variant ".csv") ; TODO LOAD per variant
    let paramsTable table:make
    let i 0
    foreach vaccineParamsFileData [ rawData -> 
      let vacName (item 0 rawData)
      let vacRiskReduct rngs:rnd-beta vaccineEffseedID (item 1 rawData) (item 2 rawData)
      let vacInfectReduct rngs:rnd-beta vaccineEffseedID (item 3 rawData) (item 4 rawData)
      if param_override_ve >= 0 [
        set vacRiskReduct param_override_ve
      ]
      if param_override_ve_area >= 0 [
        set vacInfectReduct param_override_ve_area
      ]
      let vacEffectDays item 7 rawData
      table:put paramsTable vacName (list vacRiskReduct vacInfectReduct vacEffectDays)
      
      set vacineEff_nameOut lput (word variant "_" vacName) vacineEff_nameOut
      set vacineEff_transOut lput vacRiskReduct vacineEff_transOut
      set vacineEff_areaOut lput vacInfectReduct vacineEff_areaOut
    ]
    table:put vaccineParamsTable variant paramsTable
  ]
end

to-report vaccine_getSucceptMult [variant vac day prevVac prevDay]
  if vac = 0 [
    report 1
  ]
  
  let paramsTable table:get vaccineParamsTable variant
  let vacParams table:get paramsTable vac
  if (item 2 vacParams) + day > ticks [
    if prevVac = 0 [
      report 1
    ]
    set vacParams table:get paramsTable prevVac
    set day prevDay
  ]
  
  ;; TODO waning based on day
  report 1 - (item 0 vacParams)
end

to-report vaccine_getTransmissMult [variant vac day prevVac prevDay]
  if vac = 0 [
    report 1
  ]
  
  let paramsTable table:get vaccineParamsTable variant
  let vacParams table:get paramsTable vac
  if (item 2 vacParams) + day > ticks [
    if prevVac = 0 [
      report 1
    ]
    set vacParams table:get paramsTable prevVac
    set day prevDay
  ]
  
  ;; TODO waning based on day
  report 1 - (item 1 vacParams)
end

to simul_updateVaccineParams
  
end

to simul_applyVaccine
  
end

to vaccine_update
  
end
