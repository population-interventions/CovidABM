
;;;*********************************************************************************************************************
;;; Stage Calibration
;;;*********************************************************************************************************************

to policy_none
  set stage 0
end

to policy_stage [ toStage ]
  set stage toStage
end

to policy_infect [ toStage ]
  if ticks = 0 [
    set stage toStage 
    set End_Day -1
  ]
  if (End_Day = -1 and cumulativeInfected > Total_Population / 10) or ticks = 1090 [
    set End_Day ticks + 1
  ]
end
  
;;;*********************************************************************************************************************
;;; From main
;;;*********************************************************************************************************************

to updateComplacency
  if proportion_people_avoid > Complacency_Bound [
    set proportion_people_avoid proportion_people_avoid - complacency_loss
    if proportion_people_avoid < Complacency_Bound [
      set proportion_people_avoid Complacency_Bound
    ]
  ]
  if proportion_time_avoid > Complacency_Bound [
    set proportion_time_avoid proportion_time_avoid - complacency_loss
    if proportion_time_avoid < Complacency_Bound [
      set proportion_time_avoid Complacency_Bound
    ]
  ]
end

;;;*********************************************************************************************************************
;;;*********************************************************************************************************************

to updatePolicyPipeline
  if _init_metric_threshold < 0 [
    if policy_pipeline = "ME_TS_S1" [
      ifelse days < 2 * policy_pipe_time 
      [
        ifelse days < policy_pipe_time 
        [
          set param_policy "ModerateElim"
        ]
        [
          set param_policy "TightSupress"
        ]
      ]
      [
        set param_policy "Stage1"
      ]
    ]
    if policy_pipeline = "ME_ME_ME" [
      set param_policy "ModerateElim"
    ]
    if policy_pipeline = "ME_ME_TS" [
      ifelse days < 2 * policy_pipe_time 
      [
        set param_policy "ModerateElim"
      ]
      [
        set param_policy "TightSupress"
      ]
    ]
    if policy_pipeline = "ME_ME_LS" [
      ifelse days < 2 * policy_pipe_time 
      [
        set param_policy "ModerateElim"
      ]
      [
        set param_policy "LooseSupress"
      ]
    ]
    if policy_pipeline = "ME_TS_LS" [
      ifelse days < 2 * policy_pipe_time 
      [
        ifelse days < policy_pipe_time 
        [
          set param_policy "ModerateElim"
        ]
        [
          set param_policy "TightSupress"
        ]
      ]
      [
        set param_policy "LooseSupress"
      ]
    ]
    if policy_pipeline = "ME_TS_BS" [
      ifelse days < 2 * policy_pipe_time 
      [
        ifelse days < policy_pipe_time 
        [
          set param_policy "ModerateElim"
        ]
        [
          set param_policy "TightSupress"
        ]
      ]
      [
        set param_policy "BarelySupress"
      ]
    ]
    if policy_pipeline = "ME_TS_NONE" [
      ifelse days < 2 * policy_pipe_time 
      [
        ifelse days < policy_pipe_time 
        [
          set param_policy "ModerateElim"
        ]
        [
          set param_policy "TightSupress"
        ]
      ]
      [
        set param_policy "None"
      ]
    ]
    if days >= 2 * policy_pipe_time [
      if pipe_end_override != "off" [
        set param_policy pipe_end_override
      ]
    ]
  ]
end
  
;;;*********************************************************************************************************************
;;;*********************************************************************************************************************

to COVIDPolicyTriggers
  
  ifelse days < 0
  [
    set stage init_stage
  ]
  [
    updatePolicyPipeline
    if policy_switch = "tony" or policy_switch = "nz" [
      if param_policy = "TightSupress" [
        policy_tight_supress
      ]
      if param_policy = "LooseSupress" or (param_policy = "Fix2_1_LooseSupress" and days >= 2 * policy_phase_days) [
        policy_loose_supress
      ]
      if param_policy = "BarelySupress" or (param_policy = "Fix2_1_BarelySupress" and days >= 2 * policy_phase_days) [
        policy_barely_supress
      ]
      if param_policy = "TightSupress_No_4" [
        set max_stage 3
        policy_tight_supress
      ]
      if param_policy = "LooseSupress_No_4" [
        set max_stage 3
        policy_loose_supress
      ]
      if param_policy = "AggressElim" [
        if policy_switch = "tony" [
          policy_agressive_elim
        ]
        if policy_switch = "nz" [
          policy_agressive_elim_nz
        ]
      ]
      if param_policy = "ModerateElim" [
        if policy_switch = "tony" [
          policy_moderate_elim
        ]
        if policy_switch = "nz" [
          policy_moderate_elim_nz
        ]
      ]
    ]
    
    if policy_switch = "pak" [
      COVIDPolicyTriggers_pak
    ]
    if ((param_policy = "Fix2_1_LooseSupress" or param_policy = "Fix2_1_BarelySupress") and days < 2 * policy_phase_days) [
      ifelse days < policy_phase_days
      [
        set stage 2
      ]
      [
        set stage 1.5
        ;;set stage 2 - 2 / 3 * (days - policy_phase_days) / policy_phase_days
      ]
    ]
    if param_policy = "Stage2infect" [
      policy_infect 2
    ]
    if param_policy = "None" [
      policy_none
    ]
    if param_policy = "Stage1" [
      set stage 1
    ]
    if param_policy = "Stage2" [
      set stage 2
    ]
    if param_policy = "Stage3" [
      set stage 3
    ]
    if param_policy = "Stage3.5" [
      set stage 3.5
    ]
    if param_policy = "Stage4" [
      set stage 4
    ]
    if param_policy = "Stage4.5" [
      set stage 4.5
    ]
    if param_policy = "Stage5" [
      set stage 5
    ]
    if param_policy = "StageCal_None" [
      policy_stage 0
    ]
    if param_policy = "StageCal_Test" [
      policy_stage -1
    ]
    if param_policy = "StageCal_1" [
      policy_stage 1
    ]
    if param_policy = "StageCal_2" [
      policy_stage 2
    ]
    if param_policy = "StageCal_3" [
      policy_stage 3
    ]
    if param_policy = "StageCal_4" [
      policy_stage 4
    ]
    if param_policy = "StageCal_5" [
      policy_stage 5
    ]
    if param_policy = "continuous" [
      set stage cont_stage
    ]
    if ticks < param_stage1_time [
      set stage 5
    ]
  ]
end

