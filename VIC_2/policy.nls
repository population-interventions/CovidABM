
to update_policy_trigger_scale
  if global_vaccinePhase = 2 [
    if global_vaccineSubPhase = 1 [
      set policyTriggerScale 2
    ]
    if global_vaccineSubPhase = 2 [
      set policyTriggerScale 4
    ]
  ]
  if global_vaccinePhase >= 3 [
    set policyTriggerScale 8
  ]
end

;;;*********************************************************************************************************************
;; Agressive/Moderate Elimination, and Tight/Loose Supression
;;;*********************************************************************************************************************

to policy_agressive_elim
  (ifelse max_stage > 3 and stage <= 3 and casesinperiod7 > 7.5 * 7 * policyTriggerScale
    [
      set stage 4  
      set decisionDate ticks
    ]
    max_stage > 2 and stage <= 2 and casesinperiod7 > 1.5 * 7 * policyTriggerScale
    [
      set stage 3  
      set decisionDate ticks
    ]
    max_stage > 1 and stage <= 1 and casesinperiod14 >= 2 * policyTriggerScale
    [
      set stage 2  
      set decisionDate ticks
    ]
    max_stage > 0 and stage <= 0 and casesinperiod7 >= 1 * policyTriggerScale
    [
      set stage 1  
      set decisionDate ticks
    ]
  )
  
  if decisionDate + 14 <= ticks [
    (ifelse stage >= 4 and casesinperiod7 < 5 * 7 * policyTriggerScale
      [
        set stage 3 
        set decisionDate ticks
      ]
      stage >= 3 and casesinperiod7 < 1 * 7 * policyTriggerScale
      [
        set stage 2  
        set decisionDate ticks
      ]
      stage >= 2 and casesinperiod7 <= 0 and casesinperiod14 < 2 * policyTriggerScale
      [
        set stage 1  
        set decisionDate ticks
      ]
      stage >= 1 and casesinperiod28 <= 0
      [
        set stage 0  
        set decisionDate ticks
      ]
    )
  ]
end

to policy_moderate_elim
  ifelse ticks < param_policy_force_days 
  [
    if stage != param_policy_force_stage [
        set stage param_policy_force_stage  
        set decisionDate ticks
    ]
  ]
  [
    (ifelse max_stage > 3 and stage <= 3 and casesinperiod7 > 30 * 7 * policyTriggerScale
      [
        set stage 4  
        set decisionDate ticks
      ]
      max_stage > 2 and stage <= 2 and casesinperiod7 > 6 * 7 * policyTriggerScale
      [
        set stage 3  
        set decisionDate ticks
      ]
      max_stage > 1 and stage <= 1 and casesinperiod7 > 1 * 7 * policyTriggerScale
      [
        set stage 2  
        set decisionDate ticks
      ]
      max_stage > 0 and stage <= 0 and casesinperiod7 >= 2 * policyTriggerScale
      [
        set stage 1  
        set decisionDate ticks
      ]
    )
    
    if decisionDate + 14 <= ticks [
      (ifelse stage >= 4 and casesinperiod7 < 20 * 7 * policyTriggerScale
        [
          set stage 3
          set decisionDate ticks
        ]
        stage >= 3 and casesinperiod7 < 5 * 7 * policyTriggerScale
        [
          set stage 2  
          set decisionDate ticks
        ]
        stage >= 2 and casesinperiod7 < 1 * 7 * policyTriggerScale
        [
          set stage 1  
          set decisionDate ticks
        ]
        stage >= 1 and casesinperiod7 <= 0
        [
          set stage 0  
          set decisionDate ticks
        ]
      )
    ]
  ]
end

to policy_tight_supress
  (ifelse max_stage > 3 and stage <= 3 and casesinperiod7 > 20 * total_population / 1000000 * 7 * policyTriggerScale
    [
      set stage 4  
      set decisionDate ticks
    ]
    max_stage > 2 and stage <= 2 and casesinperiod7 > 10 * total_population / 1000000 * 7 * policyTriggerScale
    [
      set stage 3  
      set decisionDate ticks
    ]
    max_stage > 0 and stage <= 0 and casesinperiod7 >= 5 * total_population / 1000000 * 7 * policyTriggerScale and decisionDate + 7 <= ticks
    [
      set stage 1
      set decisionDate ticks
    ]
  )
  
  if decisionDate + 14 <= ticks [
    (if stage >= 1 and casesinperiod7 < 2.5 * total_population / 1000000 * 7 * policyTriggerScale
      [
        set stage stage - 1
        set decisionDate ticks
      ]
    )
  ]
end

to policy_loose_supress
  (ifelse max_stage > 3 and stage <= 3 and casesinperiod7 > 100 * total_population / 1000000 * 7 * policyTriggerScale
    [
      set stage 4  
      set decisionDate ticks
    ]
    max_stage > 2 and stage <= 2 and casesinperiod7 > 50 * total_population / 1000000 * 7 * policyTriggerScale
    [
      set stage 3  
      set decisionDate ticks
    ]
    max_stage > 1 and stage <= 0 and casesinperiod7 >= 25 * total_population / 1000000 * 7 * policyTriggerScale and decisionDate + 7 <= ticks
    [
      set stage 1
      set decisionDate ticks
    ]
  )
  
  if decisionDate + 14 <= ticks [
    (if stage >= 1 and casesinperiod7 < 12.5 * total_population / 1000000 * 7 * policyTriggerScale
      [
        set stage stage - 1
        set decisionDate ticks
      ]
    )
  ]
end

;;;*********************************************************************************************************************
;;; Stage Calibration
;;;*********************************************************************************************************************

to policy_none
  set stage -1
end

to policy_stage [ toStage ]
  if ticks = 0 [
    set stage -1
    set End_Day -1
    set track_R False
  ]
  
  if End_Day = -1 and casesinperiod7 >= calibrate_stage_switch [
    set stage toStage
    set End_Day ticks + 70
    set track_R True
    set R_measure_time ticks + 30
    set decisionDate ticks
  ]
end

to policy_infect [ toStage ]
  if ticks = 0 [
    set stage toStage 
    set End_Day -1
  ]
  if (End_Day = -1 and cumulativeInfected > Total_Population / 10) or ticks = 1090 [
    set End_Day ticks + 1
  ]
end
  
;;;*********************************************************************************************************************
;;;*********************************************************************************************************************

to updatePolicyPipeline
  if policy_pipeline = "ME_ME_ME" [
    set param_policy "ModerateElim"
  ]
  if policy_pipeline = "ME_ME_TS" [
    ifelse ticks < 2 * policy_pipe_time 
    [
      set param_policy "ModerateElim"
    ]
    [
      set param_policy "TightSupress"
    ]
  ]
  if policy_pipeline = "ME_ME_LS" [
    ifelse ticks < 2 * policy_pipe_time 
    [
      set param_policy "ModerateElim"
    ]
    [
      set param_policy "LooseSupress"
    ]
  ]
  if policy_pipeline = "ME_TS_LS" [
    ifelse ticks < 2 * policy_pipe_time 
    [
      ifelse ticks < policy_pipe_time 
      [
        set param_policy "ModerateElim"
      ]
      [
        set param_policy "TightSupress"
      ]
    ]
    [
      set param_policy "LooseSupress"
    ]
  ]
end
  
;;;*********************************************************************************************************************
;;;*********************************************************************************************************************

to COVIDPolicyTriggers
  updatePolicyPipeline
  
  if param_trigger_loosen [
    update_policy_trigger_scale 
  ]
  if param_policy = "TightSupress" [
    policy_tight_supress
  ]
  if param_policy = "LooseSupress" [
    policy_loose_supress
  ]
  if param_policy = "TightSupress_No_4" [
    set max_stage 3
    policy_tight_supress
  ]
  if param_policy = "LooseSupress_No_4" [
    set max_stage 3
    policy_loose_supress
  ]
  if param_policy = "AggressElim" [
    policy_agressive_elim
  ]
  if param_policy = "ModerateElim" [
    policy_moderate_elim
  ]
  if param_policy = "Stage2infect" [
    policy_infect 2
  ]
  if param_policy = "None" [
    policy_none
  ]
  if param_policy = "Stage1" [
    set stage 0
  ]
  if param_policy = "Stage1b" [
    set stage 1
  ]
  if param_policy = "Stage2" [
    set stage 2
  ]
  if param_policy = "Stage2b" [
    set stage 2.5
  ]
  if param_policy = "Stage3" [
    set stage 3
  ]
  if param_policy = "Stage4" [
    set stage 4
  ]
  if param_policy = "StageCal None" [
    policy_stage -1
  ]
  if param_policy = "StageCal Test" [
    policy_stage -2
  ]
  if param_policy = "StageCal_1" [
    policy_stage 0
  ]
  if param_policy = "StageCal_1b" [
    policy_stage 1
  ]
  if param_policy = "StageCal_2" [
    policy_stage 2
  ]
  if param_policy = "StageCal_3" [
    policy_stage 3
  ]
  if param_policy = "StageCal_4" [
    policy_stage 4
  ]
end
