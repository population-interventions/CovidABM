
to reset_housing
  let houseTotal 0
  let regionTableData table:values regionTable
  foreach regionTableData [ data -> 
    let region item 0 data
    let houseSizeMean item 3 data
    let houseSizeSD item 4 data
    let regionRed simuls with [color = red and homeRegion = region]
    let regionSimuls simuls with [homeRegion = region]
    ask regionSimuls [
     set hasNewHouse false 
    ]
    
    let houseSize random-normal houseSizeMean houseSizeSD
    if houseSize > houseSizeMean + 2 * houseSizeSD [
      set houseSize houseSizeMean + 2 * houseSizeSD
    ]
    if houseSize < houseSizeMean - 2 * houseSizeSD [
      set houseSize houseSizeMean - 2 * houseSizeSD
    ]
    
    let curHouse table:get regionHouseMin region
    let simulInHouse 0
    ask n-of (count regionRed * house_resample_red_group) regionRed [
      set householdUnit curHouse
      set simulInHouse simulInHouse + 1
      set hasNewHouse true
      
      if simulInHouse >= houseSize [
        set simulInHouse 0
        set curHouse curHouse + 1
        set houseTotal houseTotal + 1
        
        set houseSize random-normal houseSizeMean houseSizeSD
        if houseSize > houseSizeMean + 2 * houseSizeSD [
          set houseSize houseSizeMean + 2 * houseSizeSD
        ]
        if houseSize < houseSizeMean - 2 * houseSizeSD [
          set houseSize houseSizeMean - 2 * houseSizeSD
        ]
      ]
    ]
    ask regionSimuls with [hasNewHouse = false] [
      set householdUnit curHouse
      set simulInHouse simulInHouse + 1

      if simulInHouse >= houseSize [
        set simulInHouse 0
        set curHouse curHouse + 1
        set houseTotal houseTotal + 1
        
        set houseSize random-normal houseSizeMean houseSizeSD
        if houseSize > houseSizeMean + 2 * houseSizeSD [
          set houseSize houseSizeMean + 2 * houseSizeSD
        ]
        if houseSize < houseSizeMean - 2 * houseSizeSD [
          set houseSize houseSizeMean - 2 * houseSizeSD
        ]
      ]
    ]
  ]

  ask simuls [
    simul_resetlanding
  ]

  ;; Enter values in household isolation table to save O(N) existence checks per tick
  ask simuls [
    table:put houseTrackedCaseTimeTable householdunit -1
  ]
  
  let houseNumber 0
  repeat houseTotal [
    table:put houseStudentMoveCache_lastUpdate houseNumber -1
    set houseNumber houseNumber + 1
  ]
  set houseStudentMoveCache_staleTime 0
end
