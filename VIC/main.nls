
to ShiftRecoveredTowardsTotalProportion
  if Recovered_Match_Rate > 0 [
    set recoverProportion recoverCount / (total_population - deathCount)
    let repYellowCount ceiling (Population * recoverProportion)
    let yellowSet simuls with [ color = yellow ]
    let yellowSetCount count yellowSet
    if repYellowCount < yellowSetCount [
      ask n-of (Recovered_Match_Rate * (yellowSetCount - repYellowCount) + random-float 1) yellowSet [
        set color cyan
        set isolating 0
      ]
    ]
  ]
end

;;;;;;;;;;;;*********END OF TTI FUNCTIONS******* ;;;;;;;;;;;;;

to-report nonesspercentage
  if count simuls with [ essentialworkerflag != 1 and color != cyan ] > 0 [
    report (count simuls with [ essentialworkerflag != 1 and color != cyan] ) / (count simuls with [ essentialWorkerFlag != 1 ])
  ]
end


;;*******************************************************************************************************************************
;;** Buttons **
;;*******************************************************************************************************************************
;; these funtions get called each time-step

to go
  ;; Check whether to scale up, which occurs when 10% of the agents are infected.
  CheckScale
  
  ;set test_acc 0
  ;reset-timer
  
  ;; Set a list of policy parameters (span (speed), tracking, mask_wearning etc..) based on current stage and stage reset timers
  setupstages
  if stageHasChanged = 1 [
    set houseStudentMoveCache_staleTime ticks
    ask simuls [
      ;; Set EssentialWorkerFlag based on proportion of population that is an essential worker (uses Essential_Workers (0-100) policy param)
      simul_EssentialWorkerID 
    ]
    set stageHasChanged 0 
  ]
  
  ;; Set lockdown stage and easing date, bases mostly on casesinperiod7
  CovidPolicyTriggers
  
  ;; Update vaccine stage and parameters related to vaccines.
  vaccine_update
  
  ;;reset-timer
  ;; All the simulants independently either move outside or back to home
  ask simuls [
    ;; Untracked people have their speed set to the current recommended speed, based on policy.
    simul_updateIsolationResponse
    ;; Move around, or not. It's random.
    simul_move
    ;; Some people who are near a destination to move to that destination.
    simul_visitDestination
  ]
  
  ;; Patches update the flag that sets whether they have a simulant on them.
  ask simuls [
    simul_update_patch_utilisation
  ]
  
  ;; Simulants avoid people if social distancing is enabled, and they are not essential workers (or have some other reason to be in a crowd)
  ;; Note that simulants can effect each other in this stage.
  ask simuls [
    simul_avoid
  ]
  
  ask simuls [
    simul_superSpread
  ]
  
  ;; Simulants update how effective they are at spreading or receiving the virus, then add their infectiveness to the patch infectiveness
  ;; list (if they are infective).
  ask simuls [
    ;; creates a triangular distribution of virulence that peaks at the end of the incubation period
    simul_updatepersonalvirulence
    ;; Set a proprtion of people to wear masks when not home  (uses mask_Wearing (0-100) policy param)
    simul_checkMask
    ;; Tell the patch I am on whether I am infected
    simul_record_patch_infectiveness
  ]
  
  ;; Succeptible simulants look at the patch infectiveness list and possibly become infected by each entry they find.
  ask simuls [
    ;; Potentially catch the infection from patch infectiveness
    simul_infect
  ]
  
  ;; Simulants isolate based on household cases.
  ask simuls [
    simul_updateHouseTrackedCase
  ]
  ask simuls [
    ;; If I am succeptible and a household member is tracked, move home and set pace to 0, set isolated=1. Also track isolated=1 infected people.
    simul_isolateAndTrackFromHouseHold
  ]
  
  ;; Recovered people filter out of the simulated population to move the proportion of recovered people towards the proportion in the total population.
  ;; In effect some recovered agents become succeptible again.
  ShiftRecoveredTowardsTotalProportion
  
  ;; Simulants do a bunch of non-interactive housekeeping.
  ask simuls [
    ;; Randomly start tracking infected people based on track_and_trace_efficiency.
    simul_traceme
    ;; Increment illness time and possibly lose 'health' due to it. It is unclear what health is for.
    simul_settime
    ;; if you are not dead at the end of your illness period, then you become recovered and turn yellow. Don't need hospital resources anymore.
    simul_end_infection

    ;; Set infected people to always require ICU after their incubation period???
    ;simul_checkICU
    
    ;; Randomly vaccinate people according to uptake and stage.
    simul_vaccinate_me
  ]
  
  ;; Randomly turn suceptible agents into infected ones. Percentage chance = IncursionRate.
  vaccine_do_incursion_based_on_phase
  
  ;show ( word " Simul Stuff " timer " seconds ")
  ;reset-timer
  
  if proportion_people_avoid > Complacency_Bound [
    set proportion_people_avoid proportion_people_avoid - 1
  ]
  if proportion_time_avoid > Complacency_Bound [
    set proportion_time_avoid proportion_time_avoid - 1
  ]

  updateRawCounts
  updateCounts
  
  ;; Set casesinperiod7, which is only detected cases. Also sets casesinperiod14 and casesinperiod28.
  calculateCasesInLastPeriod
  
  ;; set track_and_trace_efficiency based on the number of recent cases.
  traceadjust

  ;; Zero count- and average-style metrics for gathering throughout the next step
  resetAccumulators
  
  ;show ( word " calculate Stuff " timer " seconds ")
  ;show ( word " isolate Red " count simuls with [ isolateCompliant = 1 and color = red ] ", Red " count simuls with [ color = red ] ", isolate Blue " count simuls with [ isolateCompliant = 1 and color = cyan ] ", Blue " count simuls with [ color = cyan ])
  
  ;; counts days per tick, likely redundant at present as days are not used for anything right now.
  calculateDataOut
  
  set days days + 1
  tick
  
  if ticks = End_Day or (end_R_reported >= 0 and totalEndCount >= end_R_reported )[
   Stop 
  ]
end